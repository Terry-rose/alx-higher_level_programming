# Test cases for matrix_divided function

# Test Case 1
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix  # original matrix should not be modified
[[1, 2, 3], [4, 5, 6]]

# Test Case 2
>>> matrix = [
...     [1.5, 2.5, 3.5],
...     [4.5, 5.5, 6.5]
... ]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

# Test Case 3 - Exception test (matrix not list of lists)
>>> matrix_divided("invalid", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 4 - Exception test (rows of different sizes)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6],
...     [7, 8, 9, 10]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test Case 5 - Exception test (div is not a number)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, "invalid")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test Case 6 - Exception test (div is 0)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

